import SwiftUI
import MapKit
import CoreLocation
import CoreLocation

struct ContentView: View {
    @State private var region = MKCoordinateRegion(
        center: CLLocationCoordinate2D(latitude: 37.334722, longitude: -122.008889),
        span: MKCoordinateSpan(latitudeDelta: 0.05, longitudeDelta: 0.05)
    )
    //@State private var tasks: [MKPointAnnotation] = []
    @State private var addingTask = false

    var body: some View {
        NavigationView {
            Map(coordinateRegion: $region, interactionModes: .all, showsUserLocation: true)
            
            //.gesture(longPressGesture)
            .navigationBarTitle("LocationTasks")
            .navigationBarItems(trailing:
                Button("View Tasks") {
                    // Action when View Tasks button is tapped
                    // Implement your logic here
                }
            )
        }
    }

    //var longPressGesture: some Gesture {
        /*LongPressGesture(minimumDuration: 0.5)
            .onEnded { location in
                let newCoordinate = region.convert(location.location, toCoordinateFrom: region)
                let newTask = MKPointAnnotation()
                newTask.coordinate = newCoordinate
                //tasks.append(newTask)
            }*/
    //}
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}

